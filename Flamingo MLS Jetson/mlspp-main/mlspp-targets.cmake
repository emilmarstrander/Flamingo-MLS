# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget MLSPP::bytes MLSPP::hpke MLSPP::tls_syntax MLSPP::mls_vectors MLSPP::third_party MLSPP::mlspp)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target MLSPP::bytes
add_library(MLSPP::bytes STATIC IMPORTED)

set_target_properties(MLSPP::bytes PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/MLS/mlspp-main/lib/bytes/include"
  INTERFACE_LINK_LIBRARIES "MLSPP::tls_syntax"
)

# Create imported target MLSPP::hpke
add_library(MLSPP::hpke STATIC IMPORTED)

set_target_properties(MLSPP::hpke PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/MLS/mlspp-main/lib/hpke/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:MLSPP::bytes>;\$<LINK_ONLY:MLSPP::tls_syntax>;\$<LINK_ONLY:OpenSSL::Crypto>"
)

# Create imported target MLSPP::tls_syntax
add_library(MLSPP::tls_syntax STATIC IMPORTED)

set_target_properties(MLSPP::tls_syntax PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/MLS/mlspp-main/lib/tls_syntax/include"
  INTERFACE_LINK_LIBRARIES "MLSPP::third_party"
)

# Create imported target MLSPP::mls_vectors
add_library(MLSPP::mls_vectors STATIC IMPORTED)

set_target_properties(MLSPP::mls_vectors PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/MLS/mlspp-main/lib/mls_vectors/include"
  INTERFACE_LINK_LIBRARIES "MLSPP::mlspp;MLSPP::bytes;MLSPP::tls_syntax"
)

# Create imported target MLSPP::third_party
add_library(MLSPP::third_party INTERFACE IMPORTED)

set_target_properties(MLSPP::third_party PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/MLS/mlspp-main/third_party"
)

# Create imported target MLSPP::mlspp
add_library(MLSPP::mlspp STATIC IMPORTED)

set_target_properties(MLSPP::mlspp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/MLS/mlspp-main/include"
  INTERFACE_LINK_LIBRARIES "MLSPP::bytes;MLSPP::tls_syntax;MLSPP::hpke"
)

# Import target "MLSPP::bytes" for configuration ""
set_property(TARGET MLSPP::bytes APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(MLSPP::bytes PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_NOCONFIG "CXX"
  IMPORTED_LOCATION_NOCONFIG "/home/MLS/mlspp-main/lib/bytes/libbytes.a"
  )

# Import target "MLSPP::hpke" for configuration ""
set_property(TARGET MLSPP::hpke APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(MLSPP::hpke PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_NOCONFIG "CXX"
  IMPORTED_LOCATION_NOCONFIG "/home/MLS/mlspp-main/lib/hpke/libhpke.a"
  )

# Import target "MLSPP::tls_syntax" for configuration ""
set_property(TARGET MLSPP::tls_syntax APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(MLSPP::tls_syntax PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_NOCONFIG "CXX"
  IMPORTED_LOCATION_NOCONFIG "/home/MLS/mlspp-main/lib/tls_syntax/libtls_syntax.a"
  )

# Import target "MLSPP::mls_vectors" for configuration ""
set_property(TARGET MLSPP::mls_vectors APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(MLSPP::mls_vectors PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_NOCONFIG "CXX"
  IMPORTED_LOCATION_NOCONFIG "/home/MLS/mlspp-main/lib/mls_vectors/libmls_vectors.a"
  )

# Import target "MLSPP::mlspp" for configuration ""
set_property(TARGET MLSPP::mlspp APPEND PROPERTY IMPORTED_CONFIGURATIONS NOCONFIG)
set_target_properties(MLSPP::mlspp PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_NOCONFIG "CXX"
  IMPORTED_LOCATION_NOCONFIG "/home/MLS/mlspp-main/libmlspp.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
